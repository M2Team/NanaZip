<?xml version="1.0" encoding="utf-8"?>
<!--
  PROJECT:   Mouri Internal Library Essentials
  FILE:      Mile.Project.Cpp.props
  PURPOSE:   Definition for Visual Studio C++ Project

  LICENSE:   The MIT License

  DEVELOPER: Mouri_Naruto (Mouri_Naruto AT Outlook.com)
-->
<!--
  The documents of specific options in Mile.Project.

  How to define the project type in the "Globals" label property group.
  If the project is a console application project.
    <MileProjectType>ConsoleApplication</MileProjectType>
  If the project is a windows application project.
    <MileProjectType>WindowsApplication</MileProjectType>
  If the project is a dynamic library project.
    <MileProjectType>DynamicLibrary</MileProjectType>
  If the project is a static library project.
    <MileProjectType>StaticLibrary</MileProjectType>

  How to define the manifest file in the "Globals" label property group.
    <MileProjectManifestFile>C:\Folder\Manifest.manifest</MileProjectManifestFile>

  How to enable the version information support.
    Copy Mile.Project.Properties.Template.h to the project folder and rename it
    to Mile.Project.Properties.h.
  
  How to enable VC-LTL support.
    <MileProjectEnableVCLTLSupport>true</MileProjectEnableVCLTLSupport>

  How to enable C++/WinRT support.
    <MileProjectEnableCppWinRTSupport>true</MileProjectEnableCppWinRTSupport>
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Label="Globals">
    <MinimumVisualStudioVersion>17.0</MinimumVisualStudioVersion>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <CleanImport>true</CleanImport>
  </PropertyGroup>
  <PropertyGroup Label="Globals" Condition="'$(MileProjectEnableCppWinRTSupport)' == 'true'">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <CppWinRTGenerateWindowsMetadata>true</CppWinRTGenerateWindowsMetadata>
    <!--
      Import all Windows Runtime metadata in Windows SDK. By default enable 
      C++/WinRT to include target platform winmds if we didn't override sdk
      references and the C++ Project system isn't already adding them.
    -->
    <CppWinRTImplicitlyExpandTargetPlatform>true</CppWinRTImplicitlyExpandTargetPlatform>
    <!--
      Need to set to 'true' so that Win32 APIs are available; setting
      $(WindowsAppContainer) to 'true' causes the C++ project system to set
      WINAPI_FAMILY=WINAPI_FAMILY_APP unless this property property is also
      'true'.
    -->
    <_NoWinAPIFamilyApp>true</_NoWinAPIFamilyApp>
    <!-- Disable Microsoft.VCLibs reference -->
    <UseCrtSDKReference>false</UseCrtSDKReference>
    <!--
      This is magic that tells msbuild to link against the Desktop platform
      instead of the App platform. This you definitely want, because we're not
      building a true universal "app", we're building a desktop application
      with xaml. Without this, we'll link against the app CRT, and the =
      unpackaged story _will not_ work. Furthermore, APIs like
      CreatePseudoConsole won't be linkable without this. 
    -->
    <_VC_Target_Library_Platform>Desktop</_VC_Target_Library_Platform>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <ConfigurationType Condition="'$(MileProjectType)'=='DynamicLibrary'">DynamicLibrary</ConfigurationType>
    <ConfigurationType Condition="'$(MileProjectType)'=='StaticLibrary'">StaticLibrary</ConfigurationType>
    <PlatformToolset>v143</PlatformToolset>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
    <CharacterSet>Unicode</CharacterSet>
    <UseDebugLibraries Condition="'$(Configuration)'=='Debug'">true</UseDebugLibraries>
    <UseDebugLibraries Condition="'$(Configuration)'=='Release'">false</UseDebugLibraries>
    <WholeProgramOptimization Condition="'$(Configuration)'=='Release'">true</WholeProgramOptimization>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <PropertyGroup>
    <LinkIncremental Condition="'$(Configuration)'=='Debug'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)'=='Release'">false</LinkIncremental>
    <GenerateManifest>false</GenerateManifest>
    <IncludePath>$(MSBuildThisFileDirectory);$(IncludePath)</IncludePath>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <SDLCheck>true</SDLCheck>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <ConformanceMode>true</ConformanceMode>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <PreprocessorDefinitions Condition="'$(Platform)'=='Win32'">WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(MileProjectType)'=='ConsoleApplication'">_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(MileProjectType)'=='WindowsApplication'">_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(MileProjectType)'=='DynamicLibrary'">_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(MileProjectType)'=='StaticLibrary'">_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem Condition="'$(MileProjectType)'=='ConsoleApplication'">Console</SubSystem>
      <SubSystem Condition="'$(MileProjectType)'=='WindowsApplication'">Windows</SubSystem>
      <SubSystem Condition="'$(MileProjectType)'=='DynamicLibrary'">Windows</SubSystem>
      <SubSystem Condition="'$(MileProjectType)'=='StaticLibrary'"></SubSystem>
    </Link>
    <ResourceCompile Condition="'$(MileProjectType)'!='StaticLibrary'">
      <PreprocessorDefinitions Condition="'$(MileProjectType)'!='DynamicLibrary'">_MILE_PROJECT_MANIFEST_ID=1;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(MileProjectType)'=='DynamicLibrary'">_MILE_PROJECT_MANIFEST_ID=2;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(MileProjectManifestFile)'!=''">_MILE_PROJECT_MANIFEST_FILE=$([System.String]::Copy('$(MileProjectManifestFile)').Replace('\','\\'));%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(ProjectDir);$(MSBuildThisFileDirectory);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(MileProjectEnableCppWinRTSupport)' == 'true'">
    <ClCompile>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <PreprocessorDefinitions Condition="'$(MileProjectType)'=='DynamicLibrary'">_WINRT_DLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <GenerateWindowsMetadata>false</GenerateWindowsMetadata>
      <!--
        Because we have WindowsAppContainer set to 'true' (required for
        'Project -> Publish' menu and the .appxmanifest designer), we do not
        get these libs included automatically, so we explictly include them 
        here.
      -->
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary Condition="'$(MileProjectEnableVCLTLSupport)' == 'true'">MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary Condition="'$(MileProjectEnableVCLTLSupport)' == 'true'">MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <PackageReference Include="VC-LTL" Condition="'$(MileProjectEnableVCLTLSupport)' == 'true'">
      <Version>5.0.5</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.Windows.CppWinRT" Condition="'$(MileProjectEnableCppWinRTSupport)' == 'true'">
      <Version>2.0.220418.1</Version>
    </PackageReference>
  </ItemGroup>
</Project>
