<?xml version="1.0" encoding="utf-8"?>
<!--
   PROJECT:    Mouri Internal Library Essentials
   FILE:       Mile.Project.Wap.targets
   PURPOSE:    Definition for unstaged Visual Studio Windows Packaging Project

   LICENSE:    The MIT License

   MAINTAINER: MouriNaruto (Kenji.Mouri@outlook.com)
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- ## BEGIN HACK - Remove unnecessary files in the AppX folder ## -->
  <!--
    Reference: https://github.com/microsoft/terminal
               /blob/f08321a0b24bd6870c2f868e19e7565193b615a1
               /src/cascadia/CascadiaPackage/CascadiaPackage.wapproj#L147
  -->
  <!--
    Visual Studio 2019 Version 16.3.0 added a rule to the WAP packaging project
    that removes all non-WAP payload, which we were relying on to roll up our
    subproject resources. We have to suppress that rule but keep part of its
    logic, because that rule is where the AppxPackagePayload items are created.
  -->
  <PropertyGroup>
    <WapProjBeforeGenerateAppxManifestDependsOn>
        $([MSBuild]::Unescape('$(WapProjBeforeGenerateAppxManifestDependsOn.Replace('_RemoveAllNonWapUWPItems', 'MileProjectRemoveAllNonWapUWPItems'))'))
    </WapProjBeforeGenerateAppxManifestDependsOn>
  </PropertyGroup>
  <Target Name="MileProjectRemoveAllNonWapUWPItems">
    <ItemGroup>
      <AppxPackagePayload Include="@(WapProjPackageFile)" />
      <AppxUploadPackagePayload Include="@(UploadWapProjPackageFile)" />
      <!--
        Remove all of the xaml files, because we are using embedded xbf payloads
        (saves about 500kb on disk!)
      -->
      <AppxPackagePayload Remove="@(AppxPackagePayload)" Condition="'%(Extension)' == '.xaml'" />
      <AppxUploadPackagePayload Remove="@(AppxUploadPackagePayload)" Condition="'%(Extension)' == '.xaml'" />
    </ItemGroup>
  </Target>
  <!-- ## END HACK - Remove unnecessary files in the AppX folder ## -->
</Project>